class <%= @search_modulized_resource_class_name %>
  include ActiveModel::Model

  attr_accessor(
<% @fields.select {|k,v| @search_fields.include?(k) }.each_pair do |field_name, field_type| %>
  <% if field_type == 'belongs_to' -%>
    :<%= field_name %>_id,
  <% else %>
    :<%= field_name %>,
    <% end %>
<% end %>
  )

<% @fields.select {|k,v| @search_fields.include?(k) }.each_pair do |field_name, field_type| %>
  <%- if field_type == "integer" %>
  validates :<%= field_name -%>, numericality: { only_integer: true }, allow_blank: true
  <%- end  %>
<%- end  %>

  def initialize *args
    @relation = <%= @modulized_resource_class_name %>
    super *args
  end

  def results
    <%= @resource_name %> = @relation

    <%= @resource_name %> = @relation.order("updated_at") if <%= @modulized_resource_class_name %>.respond_to?(:updated_at)

    if valid?
<% @fields.select {|k,v| @search_fields.include?(k) }.each_pair do |field_name, field_type| %>
  <% if ['string', 'text'].include?(field_type) -%>
    <%= @resource_name %> = <%= @resource_name %>.where("<%= field_name %> LIKE ?", "%#{<%= field_name %>}%") if self.<%= field_name %>.present?
  <% elsif field_type == "boolean" -%>
    <%= @resource_name %> = <%= @resource_name %>.where(<%= field_name -%>: <%= field_name -%>=='1') if self.<%= field_name %>.present?
  <% elsif field_type == 'belongs_to' -%>
    <%= @resource_name %> = <%= @resource_name %>.where(<%= field_name %>_id: <%= field_name %>_id) if self.<%= field_name %>_id.present?
  <% else  -%>
    <%= @resource_name %> = <%= @resource_name %>.where(<%= field_name %>: <%= field_name %>) if self.<%= field_name %>.present?
  <% end  -%>
<% end -%>
  end

    <%= @resource_name %>
  end

end