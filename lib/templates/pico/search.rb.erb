class <%= @search_modulized_resource_class_name %>
  include ActiveModel::Model

  attr_accessor(
    <% @search_fields.each do |field_name| %>
    :<%= field_name %>,
    <% end %>
  )


  def results
    <%= @resource_name %> = <%= @modulized_resource_class_name %>
    <% @fields.select {|k,v| @search_fields.include?(k) }.each_pair do |field_name, field_type| %>
    <%- if field_type == "string" %>
      <%= @resource_name %> = <%= @resource_name %>.where("<%= field_name %> LIKE ?", "%#{<%= field_name %>}%") if self.<%= field_name %>.present?
    <%- else  %>
      <%= @resource_name %> = <%= @resource_name %>.where(<%= field_name %>: <%= field_name %>) if self.<%= field_name %>.present?
    <%- end  %>
    <% end %>

    <%= @resource_name %>
  end

end